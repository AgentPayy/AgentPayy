{
  "name": "@agentpayy/contracts",
  "version": "1.0.1",
  "description": "AgentPayyKit smart contracts with governance",
  "scripts": {
    "build": "forge build",
    "test": "forge test",
    "test:verbose": "forge test -vvv",
    "test:gas": "forge test --gas-report",
    "test:coverage": "forge coverage",
    "test:deploy": "forge test --match-contract DeployTest",
    "clean": "forge clean",
    "deploy:ethereum": "forge script script/Deploy.s.sol:DeployScript --rpc-url ethereum --broadcast --verify",
    "deploy:base": "forge script script/Deploy.s.sol:DeployScript --rpc-url base --broadcast --verify",
    "deploy:arbitrum": "forge script script/Deploy.s.sol:DeployScript --rpc-url arbitrum --broadcast --verify",
    "deploy:optimism": "forge script script/Deploy.s.sol:DeployScript --rpc-url optimism --broadcast --verify",
    "deploy:unichain": "forge script script/Deploy.s.sol:DeployScript --rpc-url unichain --broadcast --verify",
    "deploy:worldchain": "forge script script/Deploy.s.sol:DeployScript --rpc-url worldchain --broadcast --verify",
    "deploy:linea": "forge script script/Deploy.s.sol:DeployScript --rpc-url linea --broadcast --verify",
    "deploy:blast": "forge script script/Deploy.s.sol:DeployScript --rpc-url blast --broadcast --verify",
    "deploy:scroll": "forge script script/Deploy.s.sol:DeployScript --rpc-url scroll --broadcast --verify",
    "deploy:polygon-zkevm": "forge script script/Deploy.s.sol:DeployScript --rpc-url polygon_zkevm --broadcast --verify",
    "deploy:mantle": "forge script script/Deploy.s.sol:DeployScript --rpc-url mantle --broadcast --verify",
    "deploy:tier1": "./script/DeployMultichain.sh tier1",
    "deploy:tier2": "./script/DeployMultichain.sh tier2",
    "deploy:tier3": "./script/DeployMultichain.sh tier3",
    "deploy:all": "./script/DeployMultichain.sh all",
    "governance:deploy:ethereum": "forge script script/DeployWithGovernance.s.sol:DeployWithGovernance --rpc-url ethereum --broadcast --verify",
    "governance:deploy:base": "forge script script/DeployWithGovernance.s.sol:DeployWithGovernance --rpc-url base --broadcast --verify",
    "governance:deploy:arbitrum": "forge script script/DeployWithGovernance.s.sol:DeployWithGovernance --rpc-url arbitrum --broadcast --verify",
    "governance:deploy:optimism": "forge script script/DeployWithGovernance.s.sol:DeployWithGovernance --rpc-url optimism --broadcast --verify",
    "governance:deploy:unichain": "forge script script/DeployWithGovernance.s.sol:DeployWithGovernance --rpc-url unichain --broadcast --verify",
    "governance:deploy:worldchain": "forge script script/DeployWithGovernance.s.sol:DeployWithGovernance --rpc-url worldchain --broadcast --verify",
    "governance:deploy:linea": "forge script script/DeployWithGovernance.s.sol:DeployWithGovernance --rpc-url linea --broadcast --verify",
    "governance:deploy:target": "npm run governance:deploy:base && npm run governance:deploy:arbitrum && npm run governance:deploy:optimism && npm run governance:deploy:ethereum && npm run governance:deploy:worldchain && npm run governance:deploy:unichain",
    "safe:create": "node script/CreateGnosisSafe.js",
    "safe:create:base": "node script/CreateGnosisSafe.js --network base",
    "safe:create:target": "node script/CreateGnosisSafe.js --networks base,arbitrum,optimism,ethereum,worldchain,unichain",
    "safe:create:all": "node script/CreateGnosisSafe.js --networks base,arbitrum,optimism,ethereum",
    "verify:base": "forge verify-contract --chain base",
    "verify:arbitrum": "forge verify-contract --chain arbitrum",
    "verify:optimism": "forge verify-contract --chain optimism",
    "verify:ethereum": "forge verify-contract --chain ethereum"
  },
  "devDependencies": {
    "@openzeppelin/contracts": "^5.0.0",
    "ethers": "^6.8.0"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
